<div id="paymentBrick_container"></div>

<script src="https://sdk.mercadopago.com/js/v2"></script>

 <script is:inline>

    const mp = new MercadoPago("TEST-76f8d420-2de9-4fee-887e-567c116c82c8", {
        locale: "es",
    });
    const bricksBuilder = mp.bricks();
    const preference$ = mp.createPreference();
    const requestData = {
        items: [
            {
                id: budget.id,
                title: `Root- Program `,
                description: budget.description,
                picture_url: "http://www.myapp.com/myimage.jpg",
                category_id: "car_electronics",
                quantity: 1,
                currency_id: "ARS",
                unit_price: 170000,
            },
        ],
        notification_url: `${process.env.VERCEL_URL}/api/webhooks/mercadopago/notificacion`,
        back_urls: {
            success: `${process.env.VERCEL_URL ?? "localhost:3000"}/servicios`,
            failure: `${process.env.VERCEL_URL ?? "localhost:3000"}/error`,
            pending: `${process.env.VERCEL_URL ?? "localhost:3000"}/solicitudes-de-servicio`,
        },
        differential_pricing: {},
    };

    try {
        const response = await fetch(
            `https://api.mercadopago.com/checkout/preferences`,
            {
                method: "POST",
                headers: {
                    Authorization: `Bearer ${import.meta.env.MP_ACCESS_TOKEN}`,
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(requestData),
            },
        );
        console.log(response);
        const data = await response.json();
        const { id } = data;
        console.log(data);
        if (id && typeof id === "string") {
            // setpreferenceId(id);
            console.log(preference$.get().id);
        }
        const renderPaymentBrick = async (bricksBuilder) => {
            const settings = {
                initialization: {
                    /*
            "amount" es el monto total a pagar por todos los medios de pago con excepción de la Cuenta de Mercado Pago y Cuotas sin tarjeta de crédito, las cuales tienen su valor de procesamiento determinado en el backend a través del "preferenceId"
          */
                    amount: 17000,
                    preferenceId: id,
                    payer: {
                        firstName: "",
                        lastName: "",
                        email: "",
                    },
                },
                customization: {
                    visual: {
                        style: {
                            theme: "default",
                        },
                    },
                    paymentMethods: {
                        bankTransfer: "all",
                        atm: "all",
                        creditCard: "all",
                        debitCard: "all",
                        wallet_purchase: "all",
                        maxInstallments: 1,
                    },
                },
                callbacks: {
                    onReady: () => {
                        console.log("Brick is ready");
                        /*
             Callback llamado cuando el Brick está listo.
             Aquí puede ocultar cargamentos de su sitio, por ejemplo.
            */
                    },
                    onSubmit: ({ selectedPaymentMethod, formData }) => {
                        // callback llamado al hacer clic en el botón de envío de datos
                        return new Promise((resolve, reject) => {
                            fetch("/process_payment", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify(formData),
                            })
                                .then((response) => response.json())
                                .then((response) => {
                                    // recibir el resultado del pago
                                    resolve();
                                })
                                .catch((error) => {
                                    // manejar la respuesta de error al intentar crear el pago
                                    reject();
                                });
                        });
                    },
                    onError: (error) => {
                        // callback llamado para todos los casos de error de Brick
                        console.log(error);
                        console.error(error);
                    },
                },
            };
            window.paymentBrickController = await bricksBuilder.create(
                "payment",
                "paymentBrick_container",
                settings,
            );
        };
        renderPaymentBrick(bricksBuilder);
    } catch (error) {
        console.log(error);
    }
</script>

<script>
    const requestData = {
        items: [
            {
                id: "1212",
                title: `Root- Program `,
                description: "asdasdas",
                picture_url: "http://www.myapp.com/myimage.jpg",
                category_id: "car_electronics",
                quantity: 1,
                currency_id: "ARS",
                unit_price: 170000,
            },
        ],
        notification_url: `${process.env.VERCEL_URL}/api/webhooks/mercadopago/notificacion`,
        back_urls: {
            success: `${process.env.VERCEL_URL ?? "localhost:3000"}/servicios`,
            failure: `${process.env.VERCEL_URL ?? "localhost:3000"}/error`,
            pending: `${process.env.VERCEL_URL ?? "localhost:3000"}/solicitudes-de-servicio`,
        },
        differential_pricing: {},
    };

    try {
        const requestData = {
            items: [
                {
                    id: "1212",
                    title: `Root- Program `,
                    description: "asdasdas",
                    picture_url: "http://www.myapp.com/myimage.jpg",
                    category_id: "car_electronics",
                    quantity: 1,
                    currency_id: "ARS",
                    unit_price: 170000,
                },
            ],
            notification_url: `${process.env.VERCEL_URL}/api/webhooks/mercadopago/notificacion`,
            back_urls: {
                success: `${process.env.VERCEL_URL ?? "localhost:3000"}/servicios`,
                failure: `${process.env.VERCEL_URL ?? "localhost:3000"}/error`,
                pending: `${process.env.VERCEL_URL ?? "localhost:3000"}/solicitudes-de-servicio`,
            },
            differential_pricing: {},
        };

        const response = await fetch(
            `https://api.mercadopago.com/checkout/preferences`,
            {
                method: "POST",
                headers: {
                    Authorization: `Bearer ${import.meta.env.MP_ACCESS_TOKEN}`,
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(requestData),
            },
        );
        console.log(response);
        const data = await response.json();
        const { id } = data;
        console.log(data);
    } catch (error) {
        console.log(error);
    }
</script>
