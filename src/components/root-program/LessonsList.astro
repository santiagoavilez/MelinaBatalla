---
import { LessonProgress } from "astro:db";
import { eq } from "astro:db";
import { db } from "astro:db";
import type { ILesson } from "db/types";
import { completedLessonsStore } from "@lib/bonusStore";
import LessonsItem from "./LessonsItem";
import ListItems from "./ListItems";

interface Props {
    lessons?: Pick<ILesson, 'id'|'name'| 'slug'>[];
}

const { CourseSlug, slug } = Astro.params as {
    CourseSlug: string;
    slug: string;
};
const { lessons } = Astro.props as Props;

//console.log("locals", Astro.locals);

const { userId } = Astro.locals;

// const lessonscompleted = await db
//     .select()
//     .from(LessonProgress)
//     .where(eq(LessonProgress.userId, userId as string));

//  console.log("lessonscompleted", lessonscompleted);

// console.log("cokkies", Astro.cookies.get("__session"));

// const sessionid = Astro.cookies.get("__session");

// const session = await clerk.sessions.getSession(sessionid?.value as string);
// console.log("session", session);
// Query the lessonscompleted table to find orders completed by a user
---

<section class="pl-6 pr-6">
    <h4 class="font-semibold text-xl pb-2">Contenido del curso</h4>
    {
        !!lessons && (
            <ListItems
                client:only
                userId={userId as string}
                lessons={lessons}
                CourseSlug={CourseSlug}
                slug={slug}
            />
        )
    }
</section>
