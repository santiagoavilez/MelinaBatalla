---
import CoursesLayout from "@components/layouts/CoursesLayout.astro";
import BonusSpotify from "@components/lessons/BonusSpotify.astro";
import MarkCompleted from "@components/lessons/MarkCompleted";

import { Play } from "lucide-react";

import { eq, desc, and } from "astro:db";
import { Lesson, LessonProgress, db } from "astro:db";
import Classvideo from "@components/root-program/Classvideo";

const { slug, CourseSlug } = Astro.params;
const { userId, bonus } = Astro.locals;

const getLesson = async () => {
    const [lesson] = await db
        .select()
        .from(Lesson)
        .where(
            and(
                eq(Lesson.slug, slug as string),
                eq(Lesson.courseSlug, CourseSlug as string),
            ),
        );
    return lesson;
};
const lesson = await getLesson();
if (!lesson) {
    return Astro.redirect("/cursos/root-program/404");
}

const getUserProgress = async (lessonId: number) => {
    const [userProgress] = await db
        .select()
        .from(LessonProgress)
        .where(
            and(
                eq(LessonProgress.lessonId, lessonId),
                eq(LessonProgress.userId, userId as string),
            ),
        );
    return userProgress ? true : false;
};

const isCompleted = await getUserProgress(lesson.id);
---

<CoursesLayout>
    <div class="h-full w-full">
        {
            lesson.slug === "potenciador" ? (
                bonus === "true" ? (
                    <BonusSpotify />
                ) : (
                    <section
                        transition:persist
                        class="w-full p-6 md:p-10 flex flex-col justify-start gap-10 "
                    >
                        <div class="w-full flex flex-col items-center gap-4">
                            {" "}
                            Compra el potenciador mamu
                        </div>
                    </section>
                )
            ) : (
                <section class="h-full p-6   md:p-10 flex flex-col justify-start gap-10 max-w-screen-xl">
                    <div class="w-full flex items-center gap-4">
                        <Classvideo
                            transition:persist
                            client:only
                            lessonId={lesson.id}
                            videoId={lesson.video_id as string}
                        />
                    </div>
                </section>
            )
        }
    </div>

    <MarkCompleted
        isCompleted={isCompleted}
        client:only
        lessonId={lesson.id}
        userId={userId as string}
        lessonSlug={slug as string}
    />

    <div class="text-left flex flex-col items-start w-full md:px-10 p-6">
        <h1
            class="inline-flex items-center text-2xl xl:text-3xl font-semibold pb-4 gap-3"
        >
            <Play className="fill-negro hidden md:block " />Modulo {
                lesson.id + 1
            }: {lesson.name}
        </h1>
        <p class="text-left pb-4">{lesson.description}</p>
    </div>
</CoursesLayout>
