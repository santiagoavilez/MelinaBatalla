---
import type { GetStaticPaths } from "astro";
import CoursesLayout from "@components/layouts/CoursesLayout.astro";
import BonusSpotify from "@components/lessons/BonusSpotify.astro";
import MarkCompleted from "@components/lessons/MarkCompleted";

import { Play } from "lucide-react";

import { eq, desc, and } from "astro:db";
import { Lesson, db } from "astro:db";
import Classvideo from "@components/root-program/Classvideo";
import SignedIn from "@components/auth/SignedIn.astro";
import SignedOut from "@components/auth/SignedOut.astro";
import SignInButton from "@components/auth/SignInButton.astro";
import Potenciador from "@components/root-program/Potenciador.astro";
import BonusDescription from "@components/root-program/BonusDescription";

const { bonus } = Astro.locals;

export const getStaticPaths = async () => {
    const lessons = await db
        .select({
            slug: Lesson.slug,
        })
        .from(Lesson);

    return lessons.map((lesson) => ({
        params: { slug: lesson.slug },
    }));
};

const { slug } = Astro.params;
const [lesson] = await db
    .select({
        id: Lesson.id,
        name: Lesson.name,
        description: Lesson.description,
        video_id: Lesson.video_id,
    })
    .from(Lesson)
    .where(eq(Lesson.slug, slug))
    .limit(1);

export const prerender = true;
---

<CoursesLayout slug={slug}>
    <div
        class="bg-blanco w-full min-h-screen h-full rounded-t-3xl md:rounded-tr-none md:rounded-l-[3rem]"
    >
        <section
            class="h-full p-6 md:p-10 flex flex-col justify-start gap-10 max-w-screen-xl"
        >
            {
                slug === "potenciador" ? (
                    <Potenciador />
                ) : (
                    <div class="w-full flex items-center gap-4">
                        <Classvideo
                            client:only
                            videoId={lesson?.video_id as string}
                            lessonId={lesson.id}
                        />
                    </div>
                )
            }
        </section>

        <MarkCompleted
            client:load
            lessonId={lesson.id}
            lessonSlug={slug as string}
        />
        <div
            class="text-left flex flex-col items-start w-full md:px-10 p-6 max-w-screen-xl"
        >
            <h1
                class="inline-flex items-center text-2xl xl:text-3xl font-semibold pb-4 gap-3"
            >
                <Play className="fill-negro hidden md:block " />Modulo {
                    lesson.id + 1
                }: {lesson.name}
            </h1>
            {
                slug === "potenciador" ? (
                    <BonusDescription client:load />
                ) : (
                    <p class="text-left pb-4">{lesson.description}</p>
                )
            }
        </div>
    </div>
</CoursesLayout>
